/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package opentest.Model;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.text.ParseException;
import java.util.ArrayList;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.opencv.core.Mat;

/**
 *
 * @author User
 */
public class RegistroPersona {

    private ArrayList<Persona> listaPersonas;
    private JSONObject baseDatosPersona;
    private File file;

    public RegistroPersona() {
        listaPersonas = new ArrayList<>();
        baseDatosPersona = new JSONObject();
        file = new File("personas.json");
        leerJSON();
    }

    public void escribirJSON() {
        JSONArray playerArray = new JSONArray();

        for (Persona persona : listaPersonas) {
            JSONObject objJSONPlayer = new JSONObject();
            objJSONPlayer.put("Nombre", persona.getNombre());
            objJSONPlayer.put("Id", persona.getId());
            //objJSONPlayer.put("Imagen", persona.getImagen());
            objJSONPlayer.put("hasRegistroFacial", persona.hasRegistroFacial());
            objJSONPlayer.put("rutaImagen", persona.getRutaImagen());
            playerArray.add(objJSONPlayer);
        }
        baseDatosPersona.put("listaPersonas", playerArray);

        try {
            FileWriter fileWriter = new FileWriter(file);
            fileWriter.write(baseDatosPersona.toJSONString());
            fileWriter.flush();
            fileWriter.close();
        } catch (IOException ex) {

        }
    }

    public void leerJSON() {
        JSONParser jsonParser = new JSONParser();

        try {
            FileReader read = new FileReader(file);
            Object obj = jsonParser.parse(read);
            baseDatosPersona = (JSONObject) obj;
            JSONArray jsonArray = (JSONArray) baseDatosPersona.get("listaPersonas");

            for (Object object : jsonArray) {
                JSONObject objPersona = (JSONObject) object;
                Persona persona = new Persona();
                persona.setNombre(objPersona.get("Nombre").toString());
                persona.setId(objPersona.get("Id").toString());
                //persona.setImagen((Mat) objPersona.get("Imagen"));
                persona.setHasRegistroFacial((boolean) objPersona.get("hasRegistroFacial"));
                persona.setRutaImagen( objPersona.get("rutaImagen").toString());
                persona.cargarMat(persona.getRutaImagen());
                listaPersonas.add(persona);
            }

        } catch (FileNotFoundException ex) {

        } catch (IOException ex) {

        } catch (org.json.simple.parser.ParseException ex) {
            java.util.logging.Logger.getLogger(RegistroPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }

    public void annadirPersona(Persona persona) {
        listaPersonas.add(persona);
        escribirJSON();
    }

    public Persona buscarPersona(String id) {
        for (int index = 0; index < listaPersonas.size(); index++) {
            if (listaPersonas.get(index).getId().equals(id)) {
                return listaPersonas.get(index);
            }
        }
        return null;
    }

    public void eliminarPersona(String id) {
        for (int index = 0; index < listaPersonas.size(); index++) {
            if (listaPersonas.get(index).getId().equals(id)) {
                listaPersonas.remove(listaPersonas.get(index));
                escribirJSON();
            }
        }
    }
    
    public int size(){
        return listaPersonas.size();
    }
    
    public Persona getPersona(int indice){
        return listaPersonas.get(indice);
    }

}
